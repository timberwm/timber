stages:
  - build
  - analyze

.install-dependencies:
  before_script:
    - test "${CI_JOB_IMAGE%:*}" = "alpine" && apk add clang gcc git meson musl-dev wayland-protocols wlroots wlroots-dev
    - test "${CI_JOB_IMAGE%:*}" = "archlinux" && pacman -Syu --noconfirm clang gcc git meson perl pkg-config wayland-protocols wlroots
    - test "${CI_JOB_IMAGE%:*}" = "ubuntu" && apt update && DEBIAN_FRONTEND=noninteractive apt install -y gcc git clang meson pkg-config libwlroots-dev

build:
  extends: .install-dependencies
  stage: build
  image: ${IMAGE}
  script:
    - meson setup build . --werror
    - ninja -C build all
  parallel:
    matrix:
      - CC: [ "clang", "gcc" ]
        IMAGE: [ "alpine:edge", "archlinux:latest" ]

clang-tidy:
  extends: .install-dependencies
  stage: analyze
  image: archlinux:latest
  script:
    - meson setup build .
    - ninja -C build all
    - ninja -C build clang-tidy
